//ESCALVO
//constantes-------------------------------------------------

#define SENSOR_ULTRA1 IN_1
#define SENSOR_ULTRA2 IN_2           //CONSTANTES NO LLEVAN
#define ENTRADA2 2
#define ENTRADA3 3                     //ESCLAVO
#define ENTRADA4 4
#define ENTRADA5 5
#define SALIDA 1                      //ESCLAVO

//-----------------------------------------------------------

//VARIABLES
int color1, color2, luz, luz2;

//FUNCIONES......................................................

//................................................................

void imprimirDatos(){

    TextOut(0,LCD_LINE1,"          " );
    TextOut(0,LCD_LINE2,"          " );
    TextOut(0,LCD_LINE3,"          " );
    TextOut(0,LCD_LINE4,"          " );

    TextOut(0,LCD_LINE1," COLOR1:         " );
    TextOut(0,LCD_LINE2," COLOR2:         " );
    TextOut(0,LCD_LINE3," LUZ:         " );
    TextOut(0,LCD_LINE4," LUZ2:         " );

    NumOut(7*6,LCD_LINE1,color1);
    NumOut(7*6,LCD_LINE2,color2);
    NumOut(7*6,LCD_LINE3,luz);
    NumOut(7*6,LCD_LINE4,luz2);

}

void no_conexion(int num){            //ESCLAVO

    if(!BluetoothStatus(num)==NO_ERR){
           TextOut(5,LCD_LINE2,"DONDE ESTA MI MAESTRO");
           Wait(2000);
           Stop(true);
    }
}                                    //FIN ESCLAVO


//TAREAS PRINCIPALES------------------------------------------------------------

void adelante(){
    OnRev(OUT_AC,40);
}
void atras(){
    OnFwd(OUT_AC,40);
}
void izquierda(int n){
   OnRev(OUT_C, n);
   OnFwd(OUT_A, n);
}
void derecha(int n){
   OnRev(OUT_A, n);
   OnFwd(OUT_C, n);
}

task programa(){    //no contradecirme en los task ._.
while(true){
        //Puntos verdes
        if(color1 == 3 || color2 == 3)
        {

            if(color1 == 3)
            {

                Off(OUT_AC);
                adelante();
                until(color1 == 1 && color2 == 1);
                RotateMotorEx(OUT_AC, 50, 200, -100, true, true);
                izquierda(50);
                until(color2 == 1);
                Off(OUT_AC);
                Wait(4000);

            }

            if(color2 == 3)
            {

                Off(OUT_AC);
                adelante();
                until(color1 == 1 && color2 == 1);
                RotateMotorEx(OUT_AC, 50, 200, 100, true, true);
                derecha(50);
                until(color1 == 1);
                Off(OUT_AC);
                Wait(4000);

            }

            if(color1 == 3 && color2 == 3)
            {

                RotateMotorEx(OUT_AC, 50, 800, -100, true, true);
                izquierda(50);
                until(color2 == 1);

            }

        }
        
        if(luz < 45 && color1 == 1 && color2 == 1 && luz2 < 45)
        {

            adelante();
            Wait(500);

        }
    }
}

task leer(){
    int recibir1, recibir2, recibir3, recibir4;
    while(true){
        no_conexion(0);
        if(ReceiveRemoteNumber(ENTRADA2,true,recibir1) != STAT_MSG_EMPTY_MAILBOX){
            color1=recibir1;
         }
           if(ReceiveRemoteNumber(ENTRADA3,true,recibir2) != STAT_MSG_EMPTY_MAILBOX){
            color2=recibir2;
         }
         if(ReceiveRemoteNumber(ENTRADA4,true,recibir3) != STAT_MSG_EMPTY_MAILBOX){
            luz=recibir3;
         }
         if(ReceiveRemoteNumber(ENTRADA5,true,recibir4) != STAT_MSG_EMPTY_MAILBOX){
            luz2=recibir4;
         }
        imprimirDatos();
    }
}


task main(){        //siempre sensores en main ;)
    Precedes(programa,leer);
}
