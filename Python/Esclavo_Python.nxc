//ESCALVO
//constantes-------------------------------------------------

#define SENSOR_ULTRA1 IN_1
#define SENSOR_ULTRA2 IN_4           //CONSTANTES NO LLEVAN
#define ENTRADA2 2
#define ENTRADA3 3                     //ESCLAVO
#define ENTRADA4 4
#define ENTRADA5 5
#define SALIDA 1                      //ESCLAVO

//------------------------------------------------------------

//VARIABLES
int color1, color2, luz1, luz2;
int ultra1, ultra2;
//int direccion;

//FUNCIONES.......................................................

//................................................................

void imprimirDatos()
{

    TextOut(0,LCD_LINE2,"          " );
    TextOut(0,LCD_LINE3,"          " );
    TextOut(0,LCD_LINE4,"          " );
    TextOut(0,LCD_LINE5,"          " );
    TextOut(0,LCD_LINE6,"          " );
    TextOut(0,LCD_LINE7,"          " );

    TextOut(0,LCD_LINE2," COLOR1:             " );
    TextOut(0,LCD_LINE3," COLOR2:             " );
    TextOut(0,LCD_LINE4," LUZ1:               " );
    TextOut(0,LCD_LINE5," LUZ2:               " );
    TextOut(0,LCD_LINE6," ULTRA1:             " );
    TextOut(0,LCD_LINE7," ULTRA2:             " );

    NumOut(7*7,LCD_LINE2,color1);
    NumOut(7*7,LCD_LINE3,color2);
    NumOut(7*7,LCD_LINE4,luz1);
    NumOut(7*7,LCD_LINE5,luz2);
    NumOut(7*7,LCD_LINE6,ultra1);
    NumOut(7*7,LCD_LINE7,ultra2);

}

void no_conexion(int num)
{            //ESCLAVO

    if(!BluetoothStatus(num) == NO_ERR)
    {

        TextOut(5,LCD_LINE2,"DONDE ESTA MI MAESTRO");
        Wait(2000);
        Stop(true);

    }

}                                    //FIN ESCLAVO

void adelante(int vel)
{

    OnRev(OUT_AC, vel);

}

void atras(int vel)
{

    OnFwd(OUT_AC, vel);

}

void derecha(int vel)
{

    OnRev(OUT_A, vel);
    OnFwd(OUT_C, vel);

}

void izquierda(int vel)
{

    OnFwd(OUT_A, vel);
    OnRev(OUT_C, vel);

}

void alto()
{

    Off(OUT_AC);

}

void esquivar()
{

    izquierda(40);
    Wait(300);
    alto();
    adelante(50);
    Wait(500);
    alto();
    derecha(40);
    Wait(300);
    alto();
    adelante(50);
    Wait(500);
    alto();
    derecha(40);
    Wait(300);
    alto();
    adelante(50);
    Wait(500);
    alto();
    izquierda(40);
    Wait(300);
    alto();

}

void seguirLinea()
{

    while(true)
    {

        if(/*ultra1 < 20 ||*/ultra2 < 20)
        {

            esquivar();

        }

        if(color1 == 3 || color2 == 3)
        {

            if(color1 == 3)
            {

                alto();
                adelante(40);
                Wait(400);
                izquierda(40);
                Wait(700);
                do
                {

                    izquierda(40);

                }while(color2 == 1);

            }

            if(color2 == 3)
            {

                alto();
                adelante(40);
                Wait(400);
                derecha(40);
                Wait(700);
                do
                {

                    derecha(40);

                }while(color1 == 1);

            }

            /*if(color1 == 3 && color2 == 3)
            {

                izquierda(40);
                Wait(200);

                do
                {
                    izquierda(40);

                }while(color2 == 1);

            }*/

        }

        if(luz1 > 45 && color1 == 6 && color2 == 6 && luz2 > 45)
        {

            adelante(40);

        }
        
        if(luz1 > 45 && color1 == 1 && color2 == 1 && luz2 >45)
        {

            atras(40);
            Wait(250);

        }

        if(luz1 > 45 && color1 == 1 && color2 == 6 && luz2 > 45)
        {

            izquierda(45);

        }

        if(luz1 > 45 && color1 == 6 && color2 == 1 && luz2 > 45)
        {

            derecha(45);

        }

        if(luz1 < 45 && color1 == 6 && color2 == 6 && luz2 > 45)
        {

            izquierda(45);
            until(color2 == 1);

        }

        if(luz1 > 45 && color1 == 6 && color2 == 6 && luz2 < 45)
        {

            derecha(45);
            until(color1 == 1);

        }

        if(luz1 > 45 && color1 == 6 && color2 == 1 && luz2 < 45)
        {
        
            derecha(45);
            until(color1 == 1);

        }

        if(luz1 < 45 && color1 == 1 && color2 == 6 && luz2 > 45)
        {

            izquierda(45);
            until(color2 == 1);

        }
        
        if(luz1 < 45 && color1 == 1 && color2 == 1 && luz2 > 45)
        {

            Off(OUT_A);
            OnRev(OUT_A, 45);
            Wait(150);
            do
            {

                izquierda(45);

            }while(luz2 > 45);

        }

        if(luz1 > 45 && color1 == 1 && color2 == 1 && luz2 < 45)
        {

            Off(OUT_C);
            OnRev(OUT_C, 45);
            Wait(150);
            do
            {

                derecha(45);

            }while(luz1 > 45);

        }

        if(luz1 < 45 && color1 == 1 && color2 == 1 && luz2 < 45)
        {

            adelante(40);
            Wait(550);

        }

    }

}

//TAREAS PRINCIPALES------------------------------------------------------------

task programa()
{    //no contradecirme en los task ._.

    seguirLinea();

}

task leer()
{

    int recibir1, recibir2, recibir3, recibir4;

    while(true)
    {

        ultra1 = SensorUS(SENSOR_ULTRA1);
        ultra2 = SensorUS(SENSOR_ULTRA2);
        no_conexion(0);

        if(ReceiveRemoteNumber(ENTRADA2,true,recibir1) != STAT_MSG_EMPTY_MAILBOX)
            color1 = recibir1;

        if(ReceiveRemoteNumber(ENTRADA3,true,recibir2) != STAT_MSG_EMPTY_MAILBOX)
            color2 = recibir2;

        if(ReceiveRemoteNumber(ENTRADA4,true,recibir3) != STAT_MSG_EMPTY_MAILBOX)
            luz1 = recibir3;

        if(ReceiveRemoteNumber(ENTRADA5,true,recibir4) != STAT_MSG_EMPTY_MAILBOX)
            luz2 = recibir4;

        imprimirDatos();

    }

}

task main()
{        //siempre sensores en main ;)

    SetSensorLowspeed(SENSOR_ULTRA1);
    SetSensorLowspeed(SENSOR_ULTRA2);
    Precedes(programa,leer);

}

