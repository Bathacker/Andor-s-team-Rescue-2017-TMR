//ESCALVO
//constantes-------------------------------------------------

#define SENSOR_ULTRA1 IN_1
#define SENSOR_ULTRA2 IN_2           //CONSTANTES NO LLEVAN
#define ENTRADA2 2
#define ENTRADA3 3                     //ESCLAVO
#define ENTRADA4 4
#define ENTRADA5 5
#define SALIDA 1                      //ESCLAVO

//-----------------------------------------------------------

//VARIABLES
int color1, color2, luz, luz2;
int ultra1, ultra2;
int val = 3;

//FUNCIONES......................................................

//................................................................

void imprimirDatos(){

    TextOut(0,LCD_LINE1,"          " );
    TextOut(0,LCD_LINE2,"          " );
    TextOut(0,LCD_LINE3,"          " );
    TextOut(0,LCD_LINE4,"          " );
    TextOut(0,LCD_LINE5,"          " );
    TextOut(0,LCD_LINE6,"          " );

    TextOut(0,LCD_LINE1," COLOR1:         " );
    TextOut(0,LCD_LINE2," COLOR2:         " );
    TextOut(0,LCD_LINE3," LUZ:            " );
    TextOut(0,LCD_LINE4," LUZ2:            " );
    TextOut(0,LCD_LINE5," ULTRA1:         " );
    TextOut(0,LCD_LINE6," ULTRA2:         " );

    NumOut(7*6,LCD_LINE1,color1);
    NumOut(7*6,LCD_LINE2,color2);
    NumOut(7*6,LCD_LINE3,luz);
    NumOut(7*6,LCD_LINE4,luz2);
    NumOut(7*7,LCD_LINE5,ultra1);
    NumOut(7*7,LCD_LINE6,ultra2);

}

void no_conexion(int num){            //ESCLAVO

    if(!BluetoothStatus(num)==NO_ERR){
           TextOut(5,LCD_LINE2,"DONDE ESTA MI MAESTRO");
           Wait(2000);
           Stop(true);
    }
}                                    //FIN ESCLAVO


//TAREAS PRINCIPALES------------------------------------------------------------

void adelante(){
    OnRev(OUT_AC,40);
}
void atras(){
    OnFwd(OUT_AC,40);
}
void izquierda(int n){
   OnRev(OUT_C, n);
   OnFwd(OUT_A, n);
}
void derecha(int n){
   OnRev(OUT_A, n);
   OnFwd(OUT_C, n);
}
void obstaculo(){
  izquierda(40);
  Wait(300);
  Off(OUT_AC);
  adelante();
  Wait(500);
  Off(OUT_AC);
  derecha(40);
  Wait(300);
  Off(OUT_AC);
  adelante();
  Wait(500);
  Off(OUT_AC);
  derecha(40);
  Wait(300);
  Off(OUT_AC);
  adelante();
  Wait(500);
  Off(OUT_AC);
  izquierda(40);
  Wait(300);
  Off(OUT_AC);
}


task programa(){    //no contradecirme en los task ._.
while(true){
       //OBSTACULO
       /*if(ultra1 < 20 ||ultra2 < 20)
        {

            obstaculo();

        }*/
        //Puntos verdes
        if(color1 == 3 || color2 == 3)
        {

            if(color1 == 3)
            {

                Off(OUT_AC);
                adelante();
                Wait(400);
                izquierda(40);
                Wait(700);
                do
                {

                    izquierda(40);

                }while(color2 == 1);

            }

            if(color2 == 3)
            {

                Off(OUT_AC);
                adelante();
                Wait(400);
                derecha(40);
                Wait(700);
                do
                {

                    derecha(40);

                }while(color1 == 1);

            }

            if(color1 == 3 && color2 == 3)
            {

                izquierda(40);
                Wait(1500);

                do
                {
                    izquierda(40);

                }while(color2 == 1);

            }

        }
         //luz blanco y color negro

       if(luz > 45 && color1 == 1 && color2 == 1 && luz2 > 45){
          atras();
          Wait(200);

        }
       //Si todos los sensores detectan blanco
       if(luz > 45 && color1 == 6 && color2 == 6 && luz2 > 45){
          adelante();

        }
        //Si todos los sensores detectan negro
        if(luz < 45 && color1 == 1 && color2 == 1 && luz2 < 45){
          adelante();

       }
        //luz blanco - color negro - color2 negro - luz 2 negro
        if(luz > 45 && color1 == 1 && color2 == 1 && luz2 < 45){
           derecha(100);
       }
        //luz negro - color negro - color2 negro - luz2 blanco
        if(luz < 45 && color1 == 1 && color2 == 1 && luz2 > 45){
          izquierda(100);

       }
       //luz blanco - color negro - color2 blanco - color2 negro
        if(luz > 45 && color1 == 6 && color2 == 1 && luz2 < 45){
           derecha(85);
           until(color1 == 1);

       }
       // luz negro - color negro. color2 blanco- luz2 blanco
        if(luz < 45 && color1 == 1 && color2 == 6 && luz2 > 45){
           izquierda(85);
           until(color2==1);

       }
        // luz blanco - color negro - color2 blanco - luz2 blanco
        if(luz > 45 && color1 == 1 && color2 == 6 && luz2 > 45){
           izquierda(70);

       }
        // luz blanco - color blanco - color2 negro- luz blanco
        if(luz > 45 && color1 == 6 && color2 == 1 && luz2 > 45){
           derecha(70);

       }
       //luz negro - color1 blanco - color2 blanco- luz2 blanco
       if(luz < 40 && color1 == 6 && color2 == 6 && luz2 > 40){
          izquierda(40);
          until(color2 == 1);
       }
       //luz blanco- color1 blanco - color2 blanco- luz2 negro
       if(luz > 40 && color1 == 6 && color2 == 6 && luz2 < 40){
          derecha(40);
          until(color1 == 1);
       }
    }
}

task leer(){
    int recibir1, recibir2, recibir3, recibir4;
    while(true){
        ultra1=SensorUS(SENSOR_ULTRA1);
        ultra2=SensorUS(SENSOR_ULTRA2);
        no_conexion(0);
        if(ReceiveRemoteNumber(ENTRADA2,true,recibir1) != STAT_MSG_EMPTY_MAILBOX){
            color1=recibir1;
         }
           if(ReceiveRemoteNumber(ENTRADA3,true,recibir2) != STAT_MSG_EMPTY_MAILBOX){
            color2=recibir2;
         }
           if(ReceiveRemoteNumber(ENTRADA4,true,recibir3) != STAT_MSG_EMPTY_MAILBOX){
            luz=recibir3;
         }
         if(ReceiveRemoteNumber(ENTRADA5,true,recibir4) != STAT_MSG_EMPTY_MAILBOX){
            luz2=recibir4;
         }
        imprimirDatos();
    }
}


task main(){        //siempre sensores en main ;)
   SetSensorLowspeed(SENSOR_ULTRA1);
   SetSensorLowspeed(SENSOR_ULTRA2);
    Precedes(programa,leer);
}
